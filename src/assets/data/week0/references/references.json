[
  {
    "thumbnailUrl": "https://static.wixstatic.com/media/54af57_377e83ad1a2f4966bea770359e74b136~mv2.png/v1/fill/w_640,h_360,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/54af57_377e83ad1a2f4966bea770359e74b136~mv2.png",
    "title": "BIP 141: Segregated Witness (Consensus layer)",
    "description": "This BIP defines a new structure called a 'witness' that is committed to blocks separately from the transaction merkle tree. This structure contains data required to check transaction validity but not required to determine transaction effects. In particular, scripts and signatures are moved into this new structure.",
    "author": "Eric Lombrozo, Johnson Lau, Pieter Wuille",
    "authorIconUrl": "",
    "tags": ["BIP"],
    "type": "documentation",
    "referenceLink": "https://github.com/bitcoin/bips/blob/deae64bfd31f6938253c05392aa355bf6d7e7605/bip-0141.mediawiki#p2wpkh"
  },
  {
    "thumbnailUrl": "https://m.media-amazon.com/images/I/81WSOo0pMaL._AC_UF1000,1000_QL80_.jpg",
    "title": "Chapter 07 (Mastering Bitcoin) Advanced Transactions and Scripting",
    "description": "In the previous chapter, we introduced the basic elements of bitcoin transactions and looked at the most common type of transaction script, the P2PKH script. In this chapter we will look at more advanced scripting and how we can use it to build transactions with complex conditions.",
    "author": "aantonop",
    "authorIconUrl": "",
    "tags": [],
    "type": "book",
    "referenceLink": "https://github.com/bitcoinbook/bitcoinbook/blob/6c472dd00b649b18b6ca6bbcc8ba23775619ce08/ch07.asciidoc#pay-to-witness-script-hash-p2wsh"
  },
  {
    "thumbnailUrl": "https://media.licdn.com/dms/image/C4D1BAQHdGwrfiYxLHQ/company-background_10000/0/1583606925331/chaincode_labs_cover?e=2147483647&v=beta&t=vTd50lgzfeRE-3JoFM7q7GGC36y4ol8sTqXTZhKSSWQ",
    "title": "SegWit",
    "description": "What is SegWit? Is a non-segwit node considered a full node? What is the difference between a hard and soft fork?",
    "author": "chainCodeLabs",
    "authorIconUrl": "https://www.gitbook.com/cdn-cgi/image/width=36,dpr=2,height=36,fit=contain,format=auto/https%3A%2F%2F1502852778-files.gitbook.io%2F~%2Ffiles%2Fv0%2Fb%2Fgitbook-legacy-files%2Fo%2Fspaces%252F-MY60nCCom1SZsKHoYTm%252Favatar-1618262638437.png%3Fgeneration%3D1618262638645891%26alt%3Dmedia",
    "tags": [],
    "type": "article",
    "referenceLink": "https://chaincode.gitbook.io/seminars/bitcoin-protocol-development/segwit"
  },
  {
    "thumbnailUrl": "https://yt3.googleusercontent.com/jUeiNI4-3zbstN4ogj7qjvygNzYRTZKtxnntntqf1FfMSpM5vqy5rgkmjsBZvnF_dRFL3jh_zQ=s176-c-k-c0x00ffffff-no-rj",
    "title": "What is Segwit?",
    "description": "What is Segwit? Segregated Witness Explained Simply",
    "author": "99Bitcoins",
    "authorIconUrl": "https://yt3.googleusercontent.com/jUeiNI4-3zbstN4ogj7qjvygNzYRTZKtxnntntqf1FfMSpM5vqy5rgkmjsBZvnF_dRFL3jh_zQ=s176-c-k-c0x00ffffff-no-rj",
    "tags": [],
    "type": "video",
    "referenceLink": "https://www.youtube.com/watch?v=f3CFUbeehc8"
  },
  {
    "thumbnailUrl": "https://static.wixstatic.com/media/54af57_377e83ad1a2f4966bea770359e74b136~mv2.png/v1/fill/w_640,h_360,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/54af57_377e83ad1a2f4966bea770359e74b136~mv2.png",
    "title": "BIP 380: Output Script Descriptors General Operation",
    "description": "Output Script Descriptors are a simple language which can be used to describe collections of output scripts. There can be many different descriptor fragments and functions. This document describes the general syntax for descriptors, descriptor checksums, and common expressions.",
    "author": "Pieter Wuille, Ava Chow",
    "authorIconUrl": "",
    "tags": ["BIP"],
    "type": "documentation",
    "referenceLink": "https://github.com/bitcoin/bips/blob/master/bip-0380.mediawiki"
  },
  {
    "thumbnailUrl": "https://static.wixstatic.com/media/54af57_377e83ad1a2f4966bea770359e74b136~mv2.png/v1/fill/w_640,h_360,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/54af57_377e83ad1a2f4966bea770359e74b136~mv2.png",
    "title": "BIP 386: tr() Output Script Descriptors",
    "description": "This document specifies tr() output script descriptors. tr() descriptors take a key and optionally a tree of scripts and produces a P2TR output script.",
    "author": "Pieter Wuille, Ava Chow",
    "authorIconUrl": "",
    "tags": ["BIP"],
    "type": "documentation",
    "referenceLink": "https://github.com/bitcoin/bips/blob/master/bip-0386.mediawiki"
  },
  {
    "thumbnailUrl": "https://m.media-amazon.com/images/I/91wtm6WbjuL._SY522_.jpg",
    "title": "Programming Bitcoin",
    "description": "Dive into Bitcoin technology with this hands-on guide from one of the leading teachers on Bitcoin and Bitcoin programming. Author Jimmy Song shows Python programmers and developers how to program a Bitcoin library from scratch. You’ll learn how to work with the basics, including the math, blocks, network, and transactions behind this popular cryptocurrency and its blockchain payment system.",
    "author": "Jimmy Song",
    "authorIconUrl": "https://m.media-amazon.com/images/S/amzn-author-media-prod/kfjn4bbikaa455c94jpqq2tnug._SY600_.jpg",
    "tags": [],
    "type": "book",
    "referenceLink": "https://github.com/jimmysong/programmingbitcoin"
  },
  {
    "thumbnailUrl": "https://ioflood.com/blog/wp-content/uploads/2023/11/jq-select-function-highlighted-on-JSON-segments-300x300.jpg.webp",
    "title": "The jq ‘select’ Command | Your Key to JSON Data Filtering",
    "description": "Are you finding it challenging to filter JSON data using the jq ‘select’ command? You’re not alone. Many developers find themselves in a maze when it comes to handling JSON data filtering, but we’re here to help.",
    "author": "Gabriel Ramuglia",
    "authorIconUrl": "https://ioflood.com/blog/wp-content/litespeed/avatar/8cae107a24f7846cf96d901f73f43d02.jpg?ver=1705450030",
    "tags": [],
    "type": "article",
    "referenceLink": "https://ioflood.com/blog/wp-content/uploads/2023/11/jq-select-function-highlighted-on-JSON-segments-300x300.jpg.webp"
  },
  {
    "thumbnailUrl": "https://miro.medium.com/v2/resize:fit:1200/1*7I28RUYwZPeJ52uZrVtMMQ.png",
    "title": "Converting a JSON array to a bash array",
    "description": "Bash is the most common language of DevOps because you can guarantee that it’s installed on a server. Bash is not pretty. It’s not an elegant language. It’s better than, like, C, but it’s still awkward and clunky.",
    "author": "code doodles",
    "authorIconUrl": "",
    "tags": [],
    "type": "article",
    "referenceLink": "https://ingernet.github.io/bash/jq/json/2020/04/16/json-array-bash-array.html"
  },
  {
    "thumbnailUrl": "https://curity.io/images/resources/code-examples/code-examples-stackexchange.jpg",
    "title": "How to do formatted printing with jq?",
    "description": "jq has built-in ability to convert numbers to string or concatenate strings. How can I format strings inside jq similar to printf like padding (%4s).",
    "author": "dosmanak",
    "authorIconUrl": "https://www.gravatar.com/avatar/f6cb5d47626075a32574dc9da36eb07a?s=64&d=identicon&r=PG",
    "tags": [],
    "type": "stackExchange",
    "referenceLink": "https://unix.stackexchange.com/questions/659216/how-to-do-formatted-printing-with-jq"
  },
  {
    "thumbnailUrl": "https://getumbrel.github.io/umbrel-apps-gallery/btc-rpc-explorer/icon.svg",
    "title": "createmultisig",
    "description": "The createmultisig RPC creates a multi-signature address with n signature of m keys required. It returns a json object with the address and redeemScript.",
    "author": "chainquery",
    "authorIconUrl": "https://getumbrel.github.io/umbrel-apps-gallery/btc-rpc-explorer/icon.svg",
    "tags": [],
    "type": "documentation",
    "referenceLink": "https://chainquery.com/bitcoin-cli/createmultisig"
  },
  {
    "thumbnailUrl": "https://getumbrel.github.io/umbrel-apps-gallery/btc-rpc-explorer/icon.svg",
    "title": "getrawtransaction",
    "description": "By default, this call only returns a transaction if it is in the mempool. If -txindex is enabled and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block. If a blockhash argument is passed, it will return the transaction if the specified block is available and the transaction is in that block.",
    "author": "chainquery",
    "authorIconUrl": "https://chainquery.com/images/bitcoin.png",
    "tags": [],
    "type": "documentation",
    "referenceLink": "https://chainquery.com/bitcoin-cli/createmultisig"
  },
  {
    "thumbnailUrl": "https://ip.bitcointalk.org/?u=https%3A%2F%2Fwww.seoclerk.com%2Fpics%2F603732-1pKwMg1526045364.png&t=657&c=DIUqOIWhCTnCBw",
    "title": "ECDSA Signatures allow recovery of the public key",
    "description": "I recently read in the sec pdf file (see http://www.secg.org/download/aid-780/sec1-v2.pdf, pages 47-48, section 4.1.6) that it is possible to recover the public key used in an ECDSA signature. After an IRC conversation, this was implemented and tested by roconnor, and it seems to be possible indeed.",
    "author": "Pieter Wuille",
    "authorIconUrl": "",
    "tags": [],
    "type": "documentation",
    "referenceLink": "https://bitcointalk.org/index.php?topic=6430.0"
  },
  {
    "thumbnailUrl": "https://pbs.twimg.com/profile_images/923443851456528385/ukWFr1dM_400x400.jpg",
    "title": "Bash scripting cheatsheet",
    "description": "This is a quick reference to getting started with Bash scripting.",
    "author": "devhints.io",
    "authorIconUrl": "https://ricostacruz.com/tilnotes.assets/rstacruz.GZBW5QT0_1FGtWc.webp",
    "tags": [],
    "type": "article",
    "referenceLink": "https://devhints.io/bash#dictionaries"
  },
  {
    "thumbnailUrl": "https://nickjanetakis.com/assets/blog/cards/associative-arrays-in-bash-aka-key-value-dictionaries-9fddf0c3edd1453dcacd240f01993c3f9fc85d1d3a21995833d2840d92b813b5.jpg",
    "title": "Associative Arrays in Bash (AKA Key-Value Dictionaries)",
    "description": "We'll go over how to declare, access, update, delete and loop over them with a real world use case.",
    "author": "Nick Janetakis",
    "authorIconUrl": "https://yt3.ggpht.com/ytc/AIf8zZQRwDVThV2enLqj5Tqjm28KTRKi98FObJjNXjLwYQ=s88-c-k-c0x00ffffff-no-rj",
    "tags": [],
    "type": "video",
    "referenceLink": "https://www.youtube.com/watch?v=HxGC7SS3WWI"
  },
  {
    "thumbnailUrl": "https://curity.io/images/resources/code-examples/code-examples-stackexchange.jpg",
    "title": "How to check if an output has been spent?",
    "description": "Using an rpc client (e.g. bitcoin-cli), for a given transaction and index of an output of it, how can I tell if the output is currently an utxo, or if it has already been spent?",
    "author": "shx2",
    "authorIconUrl": "https://i.stack.imgur.com/B8PLE.jpg?s=64&g=1",
    "tags": [],
    "type": "stackExchange",
    "referenceLink": "https://bitcoin.stackexchange.com/questions/48504/how-to-check-if-an-output-has-been-spent"
  },
  {
    "thumbnailUrl": "https://www.walletmart.io/wp-content/uploads/2019/09/5d6cbdf84a37b.png",
    "title": "Support for Output Descriptors in Bitcoin Core",
    "description": "Since Bitcoin Core v0.17, there is support for Output Descriptors. This is a simple language which can be used to describe collections of output scripts. Supporting RPCs are:",
    "author": "bitcoinhodler",
    "authorIconUrl": "https://avatars.githubusercontent.com/u/31543633?s=96&v=4",
    "tags": [],
    "type": "documentation",
    "referenceLink": "https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md"
  },
  {
    "thumbnailUrl": "https://www.walletmart.io/wp-content/uploads/2019/09/5d6cbdf84a37b.png",
    "title": "Bitcoin Script Debugger",
    "description": "Bitcoin Script Debugger",
    "author": "bitcoin-core",
    "authorIconUrl": "https://avatars.githubusercontent.com/u/13464320?s=88&v=4",
    "tags": [],
    "type": "documentation",
    "referenceLink": "https://github.com/bitcoin-core/btcdeb"
  },
  {
    "thumbnailUrl": "https://www.walletmart.io/wp-content/uploads/2019/09/5d6cbdf84a37b.png",
    "title": "bitcoin.conf Configuration File",
    "description": "The configuration file is used by bitcoind, bitcoin-qt and bitcoin-cli.",
    "author": "Rspigler",
    "authorIconUrl": "https://avatars.githubusercontent.com/u/24482484?s=96&v=4",
    "tags": [],
    "type": "documentation",
    "referenceLink": "https://github.com/bitcoin/bitcoin/blob/master/doc/bitcoin-conf.md#configuration-file-path"
  },
  {
    "thumbnailUrl": "https://repository-images.githubusercontent.com/79187602/993bfc00-192d-11eb-87ba-38298fec1240",
    "title": "Learning Bitcoin from the Command Line",
    "description": "A complete course for learning Bitcoin programming and usage from the command",
    "author": "BlockchainCommons",
    "authorIconUrl": "https://avatars.githubusercontent.com/u/38142380?s=200&v=4",
    "tags": [],
    "type": "book",
    "referenceLink": "https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/tree/master?tab=readme-ov-file"
  },
  {
    "thumbnailUrl": "",
    "title": "",
    "description": "",
    "author": "",
    "authorIconUrl": "",
    "tags": [],
    "type": "",
    "referenceLink": ""
  },
  {
    "thumbnailUrl": "",
    "title": "",
    "description": "",
    "author": "",
    "authorIconUrl": "",
    "tags": [],
    "type": "",
    "referenceLink": ""
  },
  {
    "thumbnailUrl": "",
    "title": "",
    "description": "",
    "author": "",
    "authorIconUrl": "",
    "tags": [],
    "type": "",
    "referenceLink": ""
  },
  {
    "thumbnailUrl": "",
    "title": "",
    "description": "",
    "author": "",
    "authorIconUrl": "",
    "tags": [],
    "type": "",
    "referenceLink": ""
  }
]